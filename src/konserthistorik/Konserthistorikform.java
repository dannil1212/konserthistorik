/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package konserthistorik;

import java.io.BufferedReader;
import java.util.List;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel Nilsson Detta program sparar och hanterar konserter så att man
 * enkelt kan hålla koll på vilka konserter som man varit på.
 */
public class Konserthistorikform extends javax.swing.JFrame {

    List<Konsert> konserter;

    /**
     * Creates new form Konserthistorikform
     */
    public Konserthistorikform() {
        initComponents();
        loadList();
    }

    //Denna funktion laddar listan från textfilen
    private void loadList() {
        konserter = new LinkedList<>();//instanseirar lista
        textAreaHistory.setText(null);
        comboBoxDelite.removeAllItems();
        comboBoxEdit.removeAllItems();

        try {
            BufferedReader reader = new BufferedReader(
                    new FileReader("saveKonsert.txt"));
            int räknare = 0;
            while (true) {
                Konsert tempKonsert = new Konsert(); //skapar ett objekt(konsert)
                String row = reader.readLine();
                String delimiter = ", ";

                //Delar den inlästa raden i de tre olika variablerna som 
                //objektet innehåller
                String[] temp = row.split(delimiter);
                tempKonsert.setBand(temp[0]);
                tempKonsert.setPlats(temp[1]);
                tempKonsert.setDatum(temp[2]);
                if (row == null) {
                    break;
                }
                räknare++;
                konserter.add(tempKonsert);
                textAreaHistory.append(räknare + ". " + row + "\n");
                comboBoxDelite.addItem(räknare + ". " + row);
                comboBoxEdit.addItem(räknare + ". " + row);
            }
        } catch (Exception e) {
        }
    }

    //Uppdaterar alla(2) comboboxarna så att den nya uppdaterade listans alla 
    //objekt finns med i comboboxen.
    private void updateCombobox() {
        comboBoxDelite.removeAllItems();
        comboBoxEdit.removeAllItems();
        int räknare = 1;
        for (int i = 0; i < konserter.size(); i++) {
            String row = konserter.get(i).getBand() + ", "
                    + konserter.get(i).getPlats() + ", " + konserter.get(i).getDatum();
            comboBoxDelite.addItem(räknare + ". " + row);
            comboBoxEdit.addItem(räknare + ". " + row);
            räknare++;
        }

    }

    //Uppdaterar textArean där alla konserter visas
    private void textAreaAppend() {
        textAreaHistory.setText(null);
        for (int i = 0; i < konserter.size(); i++) {
            String row = (i + 1) + ". " + konserter.get(i).getBand() + ", "
                    + konserter.get(i).getPlats() + ", " + konserter.get(i).getDatum() + "\n";
            textAreaHistory.append(row);
        }
    }

    //Skriver den nyskapade konserten till textfilen
    private void saveKonsert(Konsert konsert) {
        try {
            PrintWriter writer = new PrintWriter(new BufferedWriter(
                    new FileWriter("saveKonsert.txt", true)));
            writer.println(konsert);
            writer.close();
        } catch (Exception e) {
        }
    }

    //Skriver om textfilen så att den nya uppdaterade listan stämmer överens med
    //textfilen.
    private void saveList() {
        try {
            PrintWriter writer = new PrintWriter(new BufferedWriter(
                    new FileWriter("saveKonsert.txt", false)));
            for (int i = 0; i < konserter.size(); i++) {
                writer.println(konserter.get(i));
            }
            writer.close();
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaHistory = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textFieldBandAdd = new javax.swing.JTextField();
        textFieldPlaceAdd = new javax.swing.JTextField();
        textFieldDateAdd = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textFieldBandEdit = new javax.swing.JTextField();
        textFieldPlaceEdit = new javax.swing.JTextField();
        textFieldDateEdit = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        comboBoxEdit = new javax.swing.JComboBox();
        buttonfetch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        buttonDelite = new javax.swing.JButton();
        comboBoxDelite = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        textAreaHistory.setEditable(false);
        textAreaHistory.setColumns(20);
        textAreaHistory.setRows(5);
        jScrollPane1.setViewportView(textAreaHistory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Konserthistorik", jPanel1);

        jLabel5.setText("Artist/band:");

        jLabel6.setText("Plats:");

        jLabel8.setText("Datum(dd/mm -åå):");

        buttonAdd.setText("Lägg till");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonAdd)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textFieldBandAdd)
                                .addComponent(textFieldPlaceAdd)
                                .addComponent(textFieldDateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textFieldBandAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textFieldPlaceAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldDateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(44, 44, 44)
                .addComponent(buttonAdd)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lägg till", jPanel3);

        jLabel9.setText("Artist/band:");

        jLabel10.setText("Plats:");

        jLabel12.setText("Datum(dd/mm -åå):");

        buttonSave.setText("Spara");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        comboBoxEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEditActionPerformed(evt);
            }
        });

        buttonfetch.setText("Hämta konsert");
        buttonfetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonfetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonSave)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(buttonfetch, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldBandEdit)
                            .addComponent(textFieldPlaceEdit)
                            .addComponent(textFieldDateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonfetch))
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(textFieldBandEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(textFieldPlaceEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textFieldDateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonSave)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Redigera", jPanel4);

        buttonDelite.setText("Radera");
        buttonDelite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeliteActionPerformed(evt);
            }
        });

        comboBoxDelite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDeliteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonDelite)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(comboBoxDelite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(comboBoxDelite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(buttonDelite)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Radera", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        Konsert testKonsert = new Konsert();
        String tFBA = textFieldBandAdd.getText();
        String tFPA = textFieldPlaceAdd.getText();
        String tFDA = textFieldDateAdd.getText();
        String compare = "";
        if(tFBA.equalsIgnoreCase(compare) || tFPA.equalsIgnoreCase(compare)
                || tFDA.equalsIgnoreCase(compare)){
            JOptionPane.showMessageDialog(rootPane, "Du måste fylla i alla rutor");
        }
        else {
            testKonsert.setBand(tFBA);
            testKonsert.setPlats(tFPA);
            testKonsert.setDatum(tFDA);
            konserter.add(testKonsert);
            saveKonsert(testKonsert);
            textFieldBandAdd.setText(null);
            textFieldPlaceAdd.setText(null);
            textFieldDateAdd.setText(null);
            textAreaAppend();
            updateCombobox();
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void comboBoxEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEditActionPerformed

    }//GEN-LAST:event_comboBoxEditActionPerformed

    private void buttonDeliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeliteActionPerformed
        if (comboBoxDelite.getSelectedIndex() <= -1) {
            JOptionPane.showMessageDialog(rootPane, "Det finns inga sparade konserter");
        } else {
            konserter.remove(comboBoxDelite.getSelectedIndex());
            saveList();
            textAreaAppend();
            updateCombobox();
        }
    }//GEN-LAST:event_buttonDeliteActionPerformed

    private void comboBoxDeliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDeliteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxDeliteActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        int selectedIndex = comboBoxEdit.getSelectedIndex();
        String tFBE = textFieldBandEdit.getText();
        String tFPE = textFieldPlaceEdit.getText();
        String tFDE = textFieldDateEdit.getText();
        String compare = "";
        if (selectedIndex <= -1) {
            JOptionPane.showMessageDialog(rootPane, "Ingen konsert är vald");
        }
        
        else if (tFBE.equalsIgnoreCase(compare) || tFPE.equalsIgnoreCase(compare) || tFDE.equalsIgnoreCase(compare)) {
            JOptionPane.showMessageDialog(rootPane, "Du måste fylla i alla rutor");
        } else{
            Konsert editKonsert = new Konsert();
            editKonsert = konserter.get(selectedIndex);
            editKonsert.setBand(textFieldBandEdit.getText());
            editKonsert.setPlats(textFieldPlaceEdit.getText());
            editKonsert.setDatum(textFieldDateEdit.getText());
            saveList();
            textAreaAppend();
            updateCombobox();
            textFieldBandEdit.setText(null);
            textFieldPlaceEdit.setText(null);
            textFieldDateEdit.setText(null);
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonfetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonfetchActionPerformed
        int selectedIndex = comboBoxEdit.getSelectedIndex();
        if (selectedIndex <= -1) {
            JOptionPane.showMessageDialog(rootPane, "Det finns inga sparade konserter");
        } else {
            Konsert editKonsert = new Konsert();
            editKonsert = konserter.get(selectedIndex);
            textFieldBandEdit.setText(editKonsert.getBand());
            textFieldPlaceEdit.setText(editKonsert.getPlats());
            textFieldDateEdit.setText(editKonsert.getDatum());
        }
    }//GEN-LAST:event_buttonfetchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Konserthistorikform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Konserthistorikform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Konserthistorikform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Konserthistorikform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Konserthistorikform().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelite;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonfetch;
    private javax.swing.JComboBox comboBoxDelite;
    private javax.swing.JComboBox comboBoxEdit;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea textAreaHistory;
    private javax.swing.JTextField textFieldBandAdd;
    private javax.swing.JTextField textFieldBandEdit;
    private javax.swing.JTextField textFieldDateAdd;
    private javax.swing.JTextField textFieldDateEdit;
    private javax.swing.JTextField textFieldPlaceAdd;
    private javax.swing.JTextField textFieldPlaceEdit;
    // End of variables declaration//GEN-END:variables
}
